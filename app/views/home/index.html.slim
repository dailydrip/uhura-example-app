h1 Uhura Messaging Sample Application

form onreset="window.location = '/'" accept-charset="UTF-8" action="/send_message" method="post"
  input name="utf8" type="hidden" value="âœ“" /
  input name="authenticity_token" type="hidden" value="J7CBxfHalt49OSHp27hblqK20c9PgwJ108nDHX/8Cts="
  = hidden_field_tag 'message_id', "#{@message_id}"

  .row
    .column
      label Receiver SSO ID (*):
      = text_field_tag 'receiver_sso_id', nil, required: true, placeholder: '99999999', class: 'width80'
      br
      | (*) = Required Field

    .column.left30
      fieldset.email
        legend= "From (Optional)"
        .row
          .column
          label Email Address:
          = text_field_tag 'from_email', nil, required: false, placeholder: "Default: Sending app's email address", class: 'width250'

    .column.left10.left10
      .row
        .column
        p
        | Use <a href="https://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322</a> for From, CC, BCC, Reply To
        br
        | <i>Example:</i>
        br
        | al@aol.com, Bob Brown &lt;bob@yahoo.com&gt;

  fieldset.email
    legend="Email"
    .row
      .column
        label Email Subject (*)
        = text_field_tag 'email_subject', nil, required: true
        p
        br

        label CC
        = text_field_tag 'cc', nil, placeholder: 'john.doe@example.com'

        p
        label BCC
        = text_field_tag 'bcc', nil, placeholder: 'john.doe@example.com'

        p
        label Reply To
        = text_field_tag 'reply_to', nil, placeholder: 'john.doe@example.com'

        p
        | <i>CC and BCC can have multiple emails,</i>
        br
        | <i>where each is separated by a comma.</i>
        br
        | <i> Reply To can have up to one email.</i>

        p
        br
        label Send At:
        = text_field_tag 'send_at', nil, placeholder: '1561253703'

        p
        label Batch ID:
        = text_field_tag 'batch_id', nil, placeholder: 'ABC123'

      .column.left10
        fieldset.email
          legend= "Template"

          label SendGrid Template ID (*):
          / = text_field_tag 'template_id', nil, required: true, class: 'width250'
          = select_tag "template_id", options_from_collection_for_select(@sendgrid_templates, "id", "name"), onchange: "setRequiredTemplates(event.target.selectedIndex)"
          p

          label Header(*):
          = text_field_tag 'header', nil, required: true

          label Section 1 (*):
          = text_area_tag 'section1', nil, size: "50x5", required: true

          = label_tag 'section2', 'Section 2:'
          = text_area_tag 'section2', nil, size: "50x5"

          = label_tag 'section3', 'Section 3:'
          = text_area_tag 'section3', nil, size: "50x5"

          label Button Label (*):
          = text_field_tag 'button', nil, required: true

  p
  .row
    .column
      fieldset.sms
        legend= "SMS"
        label SMS Message (*):
        = text_field_tag 'sms_message', nil, required: true, class: 'sms_message'

    .column
      fieldset.status.left10
        legend= "Message Status"
        label Email Status:
        = text_field_tag 'email_status', nil, required: false, class: 'width175'

        label SMS Status:
        = text_field_tag 'sms_status', nil, required: false, class: 'width175'

  p
  .row
    .column
      .row
        .column
          = submit_tag 'Send Message'
        .column
          = submit_tag 'Reset', type: 'reset', class: 'left10'
        .column
          = submit_tag 'Clear All', type: 'button', onclick: 'clearAll()', class: 'left10'
        .column
          = submit_tag 'Get Status', type: 'button', onclick: 'getStatus()', class: 'left10'
    .column.left10
      - flash.each do |type, message|
        .flash
          = message

javascript:
    function noenter() {
        return !(window.event && window.event.keyCode == 13);
    }

    function clearAll() {
        fields = document.forms[0].elements
        for (i = 0; i < fields.length; i++) {
            if (fields[i].type == 'text' || fields[i].type == 'textarea') {
                fields[i].value = ''
                fields[i].placeholder = ''
            }
        }
    }

    function getStatus() {
        message_id = document.getElementById('message_id').value
        if (message_id) {
            $.get("check_status/?message_id=" + message_id, function (data) {
                $('#email_status')[0].value = data['status']['sendgrid_msg_status']
                $('#email_status').addClass('updated')
                setTimeout(
                    function () {
                        $('#email_status').removeClass('updated')
                    }, 2000);
            });
        } else {
            alert("Send a message before checking it's status.")
        }
    }

    function AddAstrixIfRequired(fields) {
        for (i = 0; i < fields.length; i++) {
            if (fields[i].required) {
                if (fields[i].labels[0].textContent.lastIndexOf('*') == -1) {
                    fields[i].labels[0].textContent = fields[i].labels[0].textContent.replace(':', '') + ' (*):'
                }
            } else {
                if (fields[i].labels[0].textContent.lastIndexOf('*') > 0) {
                    fields[i].labels[0].textContent = fields[i].labels[0].textContent.replace(' (*):', ':')
                }
            }
        }
    }

    function setRequiredTemplates(selectedIndex) {
        fields = document.forms[0].elements
        if (selectedIndex == 0) {
            fields['section2'].removeAttribute('required')
            fields['section3'].removeAttribute('required')
            AddAstrixIfRequired([fields['section2'], fields['section3']])
        } else if (selectedIndex == 1) {
            fields['section2'].setAttribute("required", 'required')
            fields['section3'].removeAttribute('required')
            AddAstrixIfRequired([fields['section2'], fields['section3']])
        } else if (selectedIndex == 2) {
            fields['section2'].setAttribute("required", 'required')
            fields['section3'].setAttribute("required", 'required')
            AddAstrixIfRequired([fields['section2'], fields['section3']])
        }
    }

    function setDefaults() {
        fields = document.forms[0].elements
        fields['email_status'].setAttribute("readonly", "readonly)")
        fields['sms_status'].setAttribute("readonly", "readonly)")
        fields['section1'].setAttribute("onKeyPress", "return noenter()")
        fields['section2'].setAttribute("onKeyPress", "return noenter()")
        fields['section3'].setAttribute("onKeyPress", "return noenter()")
        // Set default example values
        fields['receiver_sso_id'].value = '63501603'
        fields['email_subject'].value = 'Picnic Saturday Week'
        // fields['template_id'].value = 'd-05d33214e6994b01b577602036bfa9f5'
        fields['header'].value = 'Dragon Rage'
        fields['section1'].value = 'Imagine you are writing an email. You are in front of the computer. You are operating the computer, clicking a mouse and typing on a keyboard, but the message will be sent to a human over the internet. So, you are working before the computer.'
        fields['button'].value = 'Count me in!'
        fields['sms_message'].value = 'Bring Drinks to the Picnic Saturday Week'
        // Set dynamically
        fields['email_status'].value = "#{@email_status}"
        fields['sms_status'].value = "#{@sms_status}"
    }
    setDefaults()

